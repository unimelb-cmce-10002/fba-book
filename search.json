[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Foundations of Business Analytics",
    "section": "",
    "text": "Welcome\nIn this course, you’ll develop the essential skills to analyze and interpret data for better business decision-making. Whether you’re new to coding or looking to strengthen your analytical thinking, we’ll guide you through the fundamentals of working with data in R — structuring, transforming, visualizing, analyzing, and interpreting information effectively.\nBusiness analytics spans three critical dimensions: understanding what happened in the past, anticipating what will happen next, and uncovering why things happen through causal analysis. Through hands-on case studies, you’ll apply these approaches to real-world business problems, extracting meaningful insights that drive action. The power of data lies in the stories it tells. From ancient oral traditions to modern visualizations, effectively communicated insights create impact. You’ll learn to transform raw data into compelling narratives that enhance clarity and directly influence business decisions.\nYour approach will mirror that of a scientist: observing carefully, experimenting methodically, and making evidence-based predictions about firm and consumer behavior. This systematic framework provides a practical toolkit for addressing complex business challenges. With this analytical power comes significant responsibility. We’ll explore ethical dimensions of working with sensitive information, recognizing and mitigating bias, balancing analytical insight with individual rights, and ensuring transparent communication of findings.\nFor knowledge to create value, it must be communicated clearly and transparently. You’ll develop workflows that ensure accuracy, consistency, and reliability — critical skills for building trust in your analysis.\nData is everywhere, but enduring insights are rare. This course will help you transform numbers into knowledge that informs business and society—ethically, responsibly, and effectively.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html",
    "href": "insights/data_visualisation.html",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "",
    "text": "3.1 The Business Challenge",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#the-business-challenge",
    "href": "insights/data_visualisation.html#the-business-challenge",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "",
    "text": "The Topic: Understanding Price Sensitivity in Beer Sales\n\nAustralian retailers make thousands of pricing decisions\n1% improvement in pricing → 11% profit increase\nBeer: $16.8 billion Australian market\nOur question today: How do price changes affect sales across different beer brands?\n\n\n\nThe Data: Retail Scanner Data from Dominick’s Finer Foods\n\nWeekly sales for four major beer brands for a Chicago based retailer\nPrice, quantity, store location, and promotional information\nSimilar to what Woolworths and Coles analysts work with daily\nReal-world retail data to discover real-world patterns{.unnumbered}\n\n\n\nThe Method: Data Visualization\n\n“The greatest value of a picture is when it forces us to notice what we never expected to see.” — John Tukey\n\n\nVisual processing is 60,000× faster than text - spot patterns and outliers instantly\nBridges the gap between data scientists and business decision-makers\nReveals hidden relationships that drive consumer behavior and pricing effectiveness\nTransforms complex numerical relationships into actionable insights for category managers\n\nNext speil\n\nGraphs are essential to data storytelling—they reveal both broad patterns and key details\nSeeing the data builds understanding—graphs help us engage with data in ways tables and summaries cannot.\nGood graphs minimize information loss—they translate data into visuals that audiences can easily interpret and act on\nGraphing is an encoding process—we design visuals to communicate insights, and their success depends on how well the audience decodes them.\nEffective graphs are audience-focused—they should clearly convey the story behind the data while preserving its context.\n\n\n\nWhere we’re headed\nJust a few lines of R code transform numbers into business intelligence\nFrom this:\n\n\n# A tibble: 10 × 6\n   store  week brand       qty price imported\n   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   \n 1    86    91 Budweiser    23  3.49 domestic\n 2    86    91 Corona       13  5.79 imported\n 3    86    91 Lowenbrau    13  3.99 imported\n 4    86    91 Miller       15  3.69 domestic\n 5    86    92 Budweiser    46  3.49 domestic\n 6    86    92 Corona       24  5.79 imported\n 7    86    92 Lowenbrau    21  3.99 imported\n 8    86    92 Miller      117  2.99 domestic\n 9    86    93 Budweiser    47  3.49 domestic\n10    86    93 Corona       23  4.39 imported\n\n\nto this (REMARK Still need to complete the pretty-ing of plots)\n\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#the-game-plan-what-were-aiming-for",
    "href": "insights/data_visualisation.html#the-game-plan-what-were-aiming-for",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.2 The Game Plan: What we’re aiming for",
    "text": "3.2 The Game Plan: What we’re aiming for\nRecall our workflow:\n\nDefine the Business Question & Plan Outputs\nAcquire and Prepare Data\nExplore and Visualize Patterns\nAnalyze and Interpret Findings\nCommunicate Insights and Recommendations\n\nSketch of the plan: 1 business question & 3 plots …\n\nDefine the Business Question\nLoad beer sales data\nUnderstand data structure\nBox plot for price by import status\nDistribution plot of sales by import status\nDemand curve by import status\nAnalyze, Interpret & Communicate\n\nLet’s get started!",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#loading-and-understanding-the-data",
    "href": "insights/data_visualisation.html#loading-and-understanding-the-data",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.3 Loading and Understanding the Data",
    "text": "3.3 Loading and Understanding the Data\n\nR packages for today\nTO DO: Add Spiel on ggplot2 as a data viz package.\n\nlibrary(tidyverse)  # for plotting, includes ggplot\nlibrary(patchwork)  # for combining multiple plots into subfigures\nlibrary(scales)     # for formatting axis scales\nlibrary(ggokabeito) # color blind friendly color palette -- this course's default\n\n\n\nLoading the Data in R\n\nbeer &lt;- read_csv(\"https://raw.githubusercontent.com/unimelb-cmce-10002/fba-book/refs/heads/main/data/beer.csv\")\n\n\n\nThe Beer Sales Dataframe\nExplore data frame, define any necessary terms\n\nbeer\n\n# A tibble: 4,033 × 17\n   store  week brand      upc   qty price sales_indicator city  price_tier  zone\n   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt;           &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n 1    86    91 Budwei… 1.82e9    23  3.49 FALSE           Chic… medium         2\n 2    86    91 Corona  8.07e9    13  5.79 FALSE           Chic… medium         2\n 3    86    91 Lowenb… 3.41e9    13  3.99 FALSE           Chic… medium         2\n 4    86    91 Miller  3.41e9    15  3.69 FALSE           Chic… medium         2\n 5    86    92 Budwei… 1.82e9    46  3.49 FALSE           Chic… medium         2\n 6    86    92 Corona  8.07e9    24  5.79 FALSE           Chic… medium         2\n 7    86    92 Lowenb… 3.41e9    21  3.99 FALSE           Chic… medium         2\n 8    86    92 Miller  3.41e9   117  2.99 FALSE           Chic… medium         2\n 9    86    93 Budwei… 1.82e9    47  3.49 FALSE           Chic… medium         2\n10    86    93 Corona  8.07e9    23  4.39 FALSE           Chic… medium         2\n# ℹ 4,023 more rows\n# ℹ 7 more variables: zip &lt;dbl&gt;, address &lt;chr&gt;, latitude &lt;dbl&gt;,\n#   longtitude &lt;dbl&gt;, start_of_week &lt;date&gt;, is_holiday_week &lt;lgl&gt;,\n#   imported &lt;chr&gt;\n\n\n\nglimpse(beer)\n\nRows: 4,033\nColumns: 17\n$ store           &lt;dbl&gt; 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86…\n$ week            &lt;dbl&gt; 91, 91, 91, 91, 92, 92, 92, 92, 93, 93, 93, 93, 94, 94…\n$ brand           &lt;chr&gt; \"Budweiser\", \"Corona\", \"Lowenbrau\", \"Miller\", \"Budweis…\n$ upc             &lt;dbl&gt; 1820000016, 8066095605, 3410021505, 3410000554, 182000…\n$ qty             &lt;dbl&gt; 23, 13, 13, 15, 46, 24, 21, 117, 47, 23, 34, 118, 46, …\n$ price           &lt;dbl&gt; 3.49, 5.79, 3.99, 3.69, 3.49, 5.79, 3.99, 2.99, 3.49, …\n$ sales_indicator &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ city            &lt;chr&gt; \"Chicago\", \"Chicago\", \"Chicago\", \"Chicago\", \"Chicago\",…\n$ price_tier      &lt;chr&gt; \"medium\", \"medium\", \"medium\", \"medium\", \"medium\", \"med…\n$ zone            &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ zip             &lt;dbl&gt; 60618, 60618, 60618, 60618, 60618, 60618, 60618, 60618…\n$ address         &lt;chr&gt; \"3350 Western Ave\", \"3350 Western Ave\", \"3350 Western …\n$ latitude        &lt;dbl&gt; 41.94235, 41.94235, 41.94235, 41.94235, 41.94235, 41.9…\n$ longtitude      &lt;dbl&gt; -87.68999, -87.68999, -87.68999, -87.68999, -87.68999,…\n$ start_of_week   &lt;date&gt; 1991-06-06, 1991-06-06, 1991-06-06, 1991-06-06, 1991-…\n$ is_holiday_week &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ imported        &lt;chr&gt; \"domestic\", \"imported\", \"imported\", \"domestic\", \"domes…\n\n\nTODO: So what is the business question?",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#visualizing-the-data",
    "href": "insights/data_visualisation.html#visualizing-the-data",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.4 Visualizing the Data",
    "text": "3.4 Visualizing the Data\nDetour: Viz principles + ggplot “building”\n\nInvestigating Price Distributions\nSet the Canvas\n\nggplot(beer)\n\n\n\n\n\n\n\n\nChoose a geom\n\nggplot(beer) +\n    geom_boxplot()\n\nSpecify the aesthetic\n\nggplot(beer) +\n    geom_boxplot(aes(y = price))\n\n\n\n\n\n\n\n\nNow do it for import/non-import (and we talk about why)\n\nggplot(beer) +\n    geom_boxplot(aes(y = price, x = imported))\n\n\n\n\n\n\n\n\nDescribe findings. Why might prices of imported beers be higher?\nNote what we have done so far prints the plot, can store for later\n\nprice_box &lt;- \n    ggplot(beer) +\n    geom_boxplot(aes(y = price, x = imported))\n\nThen to see the output\n\nprice_box\n\n\n\n\n\n\n\n\n\n\n5 min\n\n\nCreate a box plot comparing the prices across different beer brands.\nSummarize the main insights from the graph in 2 sentences.\n\n\n\nSolution\n\n\n\nggplot(beer) +\n    geom_boxplot(aes(y = price, x = brand))\n\n\n\n\n\n\n\n\n\n\n\nExploring Quantity Sold\n\nHistogram\n\nggplot(beer) +\n    geom_histogram(aes(x = qty))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(beer) +\n    geom_histogram(aes(x = qty), binwidth = 5)\n\n\n\n\n\n\n\n\nOR equivalently\n\nggplot(beer) +\n    geom_histogram(aes(x = qty), bins = 40)\n\n\n\n\n\n\n\n\n\n\nDensity Plot\n\nggplot(beer) +\n    geom_density(aes(x = qty))\n\n\n\n\n\n\n\n\n\nggplot(beer) +\n    geom_density(aes(x = qty, fill = imported), alpha = 0.35)\n\n\n\n\n\n\n\n\nExplain the findings …\n\n\n5 min\n\n\nCreate histograms and density plots to visualize the distribution of quantity sold across different beer brands\nCreate histograms and density plots to visualize the distribution of the prices across different beer brands\n\n\n\nSolution\n\n\n\n\n\n\nggplot(beer) +\n    geom_density(aes(x = qty, fill = brand), alpha = 0.35)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(beer) +\n    geom_density(aes(x = price, fill = brand), alpha = 0.35)\n\n\n\n\n\n\n\n\n\n\n\n\nDetour: Adding Style to our plots\nTHINGS TO CONSIDER:\n\nColor / fill\nThemes\nother geom_ ’s\ntitles\nlabels\nscales\n\nREMARK: leave themes and geom_’s to homework to explore\nWhere we end up in this section\n\nprice_plot &lt;-\n    ggplot(beer) +\n    geom_boxplot(aes(y = price, x = imported, fill = imported)) +\n    scale_y_continuous(\n        breaks = c(3, 4, 5, 6),\n        labels = scales::dollar\n      ) +\n    scale_fill_okabe_ito() +\n    theme(legend.position = \"none\") +\n    labs(y = \"Price\", x = \"Production Location\")\n\nprice_plot\n\n\n\n\n\n\n\n\n\n\n5 min\n\n\nCustomize the sales density plot to use the Okabe-Ito color palette and add axis labels.\n\n\n\nsales_plot &lt;-\n    ggplot(beer) +\n    geom_density(aes(x = qty, fill = imported), \n                 alpha = 0.35\n                 ) +\n    scale_fill_okabe_ito()\n\n\nsales_plot\n\n\n\n\n\n\n\n\n\n\nCreating Demand Curves\nNow, we want to move onto visualizing two dimensions of data, to explore how demand varies with price.\n\nggplot(beer) +\n    geom_point(aes(y = price, x = qty), \n               color = \"steelblue\", \n               alpha = 0.25\n               )\n\n\n\n\n\n\n\n\nNot so pretty as raw data …\nTODO: Now move to log-log- with explanation as to why this is useful\n\nggplot(beer) +\n    geom_point(aes(y = log(price), x = log(qty)), \n               color = \"steelblue\", \n               alpha = 0.25\n               )\n\n\n\n\n\n\n\n\nAn alternative way to do this is:\n\nggplot(beer) +\n    geom_point(aes(y = price, x = qty), \n               color = \"steelblue\", \n               alpha = 0.25\n               ) +\n # Natural log scale for x-axis with meaningful breaks\n  scale_x_continuous(\n    trans = \"log\",\n    breaks = c(1, 2, 5, 10, 20, 50, 100, 200),\n    #labels = scales::comma\n  ) + \n      # Natural log scale for y-axis with meaningful breaks\n  scale_y_continuous(\n    trans = \"log\",\n    breaks = c(3, 4, 5, 6),\n    labels = scales::dollar\n  ) +\n    labs(x = \"Quantity\", y = \"Price\")\n\n\n\n\n\n\n\n\nNote that this preserves the axes as linear scales, but the data is transformed to log scales.\nWe can add a third piece of information to this plot – whether the beer is imported or not\nSeparate by import status\n\nggplot(beer) +\n    geom_point(aes(y = price, x = qty,\n                   color = imported), \n               alpha = 0.25\n               ) +\n # Natural log scale for x-axis with meaningful breaks\n  scale_x_continuous(\n    trans = \"log\",\n    breaks = c(1, 2, 5, 10, 20, 50, 100, 200)#,\n    #labels = scales::comma\n  ) + \n      # Natural log scale for y-axis with meaningful breaks\n  scale_y_continuous(\n    trans = \"log\",\n    breaks = c(3, 4, 5, 6),\n    labels = scales::dollar\n  ) +\n    labs(x = \"Quantity\", y = \"Price\") + \n    scale_color_okabe_ito() +\n    theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\nSometimes we don’t only want to color the points, but have separate plots for different groups of products …\nSeparate plots with faceting\n\nggplot(beer) +\n    geom_point(aes(y = price, x = qty,\n                   color = imported), \n               alpha = 0.25\n               ) +\n # Natural log scale for x-axis with meaningful breaks\n  scale_x_continuous(\n    trans = \"log\",\n    breaks = c(1, 2, 5, 10, 20, 50, 100, 200) #,\n    #labels = scales::comma\n  ) + \n      # Natural log scale for y-axis with meaningful breaks\n  scale_y_continuous(\n    trans = \"log\",\n    breaks = c(3, 4, 5, 6),\n    labels = scales::dollar\n  ) +\n    labs(x = \"Quantity\", y = \"Price\") + \n    facet_wrap(~ imported) +\n    scale_color_okabe_ito() +\n    theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\nNow quick summary of the business insights from this plot.\nUntil now, we’ve always had one layer of geom_ in our plots. ggplot allows us to add more. Let’s do this by adding a demand curve to the plot …\nAdd a demand curve, i.e. add an extra layer\n\nggplot(beer) +\n    geom_point(aes(y = price, x = qty,\n                   color = imported), \n               alpha = 0.25\n               ) +\n    geom_smooth(aes(y = price, x = qty), \n                  method = \"lm\", \n                  color = \"#CC79A7\",\n                  se = TRUE) +\n # Natural log scale for x-axis with meaningful breaks\n  scale_x_continuous(\n    trans = \"log\",\n    breaks = c(1, 2, 5, 10, 20, 50, 100, 200)#,\n    #labels = scales::comma\n  ) + \n      # Natural log scale for y-axis with meaningful breaks\n  scale_y_continuous(\n    trans = \"log\",\n    breaks = c(3, 4, 5, 6),\n    labels = scales::dollar\n  ) +\n    labs(x = \"Quantity\", y = \"Price\") + \n    facet_wrap(~ imported) +\n    scale_color_okabe_ito() +\n    theme(legend.position = \"bottom\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nNote we had to write aes twice, if we are going to use the same aesthetics for multiple layers, we can put in the ggplot() function\n\ndemand_by_import &lt;- \n    ggplot(beer,\n       aes(y = price, x = qty,\n           color = imported \n           )\n       ) +\n    geom_point(alpha = 0.25) +\n    geom_smooth(method = \"lm\", \n                  color = \"#CC79A7\",\n                  se = TRUE) +\n # Natural log scale for x-axis with meaningful breaks\n  scale_x_continuous(\n    trans = \"log\",\n    breaks = c(1, 2, 5, 10, 20, 50, 100, 200) #,\n    #labels = scales::comma\n  ) + \n      # Natural log scale for y-axis with meaningful breaks\n  scale_y_continuous(\n    trans = \"log\",\n    breaks = c(3, 4, 5, 6),\n    labels = scales::dollar\n  ) +\n    labs(x = \"Quantity\", y = \"Price\") + \n    facet_wrap(~ imported) +\n    scale_color_okabe_ito() +\n    theme(legend.position = \"bottom\")\n\ndemand_by_import\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nExercise. Do this by brand rather than by import status\n\n\n5 min\n\n\nModify the plot above to create separate subplots for brands rather than import status.\n\n\n\nSolution\n\n\n\ndemand_by_brand &lt;-\n    ggplot(beer,\n        aes(y = log(price), x = log(qty))\n       ) +\n    geom_point(color = \"steelblue\",\n               alpha = 0.25\n               ) +\n    geom_smooth(method = \"lm\", color =  \"#CC79A7\") +\n    facet_wrap(~ brand)\n\ndemand_by_brand\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#bringing-it-all-together-sharing-our-results",
    "href": "insights/data_visualisation.html#bringing-it-all-together-sharing-our-results",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.5 Bringing it all together: Sharing Our Results",
    "text": "3.5 Bringing it all together: Sharing Our Results\nFinal plot. (Still needs some editing to match the first one)\n\ndemand_by_import /\n    (price_plot | sales_plot) + \n      plot_layout(guides = \"collect\") & \n     theme(legend.position = \"bottom\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n5 min\n\nWrite 2-3 sentence summary of the main takeaways from the visualization that you could send to a category manager\n\n\n\n10 min\n\n\nConstruct a similar plot to the one we’ve constructed above, but separate the plots by brand rather than import status.\nWrite 2-3 sentence summary of the main takeaways from the visualization that you could send to a category manager",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#an-aside-always-visualize-the-data",
    "href": "insights/data_visualisation.html#an-aside-always-visualize-the-data",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.6 An Aside: Always visualize the data!",
    "text": "3.6 An Aside: Always visualize the data!\nWhy have we started with data visualisation? It’s because we believe no matter what business analytics task you perform, you should always start with visualising the data.\nWhy is that the case? Consider the following. We collect 13 data sets.\n\nlibrary(datasauRus)\n\nmy_data &lt;- datasaurus_dozen\n\nNow we look at summary statistics about them:\n\n\n\n\n    \n\n    \n    \n      \n        \n        \n              \n                Dataset\n                x mean\n                x sd\n                y mean\n                y sd\n              \n        \n        \n        \n                \n                  dino\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  away\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  h_lines\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  v_lines\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  x_shape\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  star\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  high_lines\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  dots\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  circle\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  bullseye\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  slant_up\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  slant_down\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n                \n                  wide_lines\n                  54.3\n                  16.8\n                  47.8\n                  26.9\n                \n        \n      \n    \n\n\n\nSummary statistics are identical for all datasets. But when we plot them, we see there are very different patterns in each dataset:\n\nggplot(my_data,\n       aes(x = x,\n           y = y)) +\n    geom_point() +\n    facet_wrap(~dataset, ncol = 3)\n\n\n\n\n\n\n\n\nWithout visualising the data, we likely would have missed these very different patterns.",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#conclusion",
    "href": "insights/data_visualisation.html#conclusion",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.7 Conclusion",
    "text": "3.7 Conclusion\nWe’ve covered a lot. Two main themes\n\nThe process of creating a ggplot:\n\n\nInitialize the Plot with ggplot() – Define the dataset and aesthetic mappings (aes()).\nAdd Geometric Layers (geom_*) – Choose a geom function to represent the data (e.g., points, bars, lines).\nCustomize the Appearance – Modify labels, themes, colors, and axes.\n(Optional) Add Statistical Transformations and Annotations – Include trend lines, facets, or text annotations.\n\n\nWe’ve highlighted one key principle of effective data visualisation per plot:\n\n\nWith price boxplot: “Choose visualizations appropriate to your question”\nWith density plots: “Color enhances categorical comparison”\nWith demand curves: “Transformations (like log scales) can reveal patterns”\nWith faceting: “Small multiples help compare across groups”\nWith statistical transformations: “Summarizing data (like smoothing or regression) highlights trends”\n\nUsing 1 + 2 together gave us business intelligence … and let us tell stories with data.",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "insights/data_visualisation.html#your-to-do-list",
    "href": "insights/data_visualisation.html#your-to-do-list",
    "title": "3  Data Visualisation for Business Intelligence",
    "section": "3.8 Your To Do List",
    "text": "3.8 Your To Do List\n…",
    "crumbs": [
      "Getting Our First Insights from Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Visualisation for Business Intelligence</span>"
    ]
  },
  {
    "objectID": "tutorials/data_visualisation.html",
    "href": "tutorials/data_visualisation.html",
    "title": "Tutorial 3: Data Visualisation for Business Intelligence",
    "section": "",
    "text": "The Business Challenge",
    "crumbs": [
      "Tutorials",
      "Tutorial 3: Data Visualisation for Business Intelligence"
    ]
  },
  {
    "objectID": "tutorials/data_visualisation.html#the-business-challenge",
    "href": "tutorials/data_visualisation.html#the-business-challenge",
    "title": "Tutorial 3: Data Visualisation for Business Intelligence",
    "section": "",
    "text": "The Topic: Understanding Melbourne’s Housing Market\nMelbourne’s real estate market is one of the most dynamic in Australia. Property prices are influenced by several factors, including location, dwelling type, and proximity to the Central Business District (CBD). Buyers, sellers, and policymakers constantly analyze housing trends to make informed decisions. Understanding these trends is crucial in a $2 trillion+ housing market, where even small fluctuations in pricing expectations can have significant financial impacts.\nA key question we will explore is: How do property prices vary by region, dwelling type, and location? By analyzing real estate data, we can identify patterns that help explain the drivers of Melbourne’s housing prices and their implications for different stakeholders in the market.\n\n\nThe Data: The Melbourne Housing Market Dataset\nWe will use a dataset containing real estate sales data from Melbourne. The dataset provides insights into housing trends and includes key variables that influence property prices.\nThe dataset captures the property location within broader metropolitan regions (regionname), allowing us to compare trends across different areas. It also includes the type of dwelling, classified as House (h), Townhouse (t), or Apartment (u), enabling us to assess price differences based on housing type. The sale price (price) provides a measure of market value, while the distance to the CBD (distance) helps analyze the impact of proximity to the city center on property prices.\nSimilar datasets are widely used by real estate analysts, banks, and property investors to assess housing trends, predict future movements, and guide investment decisions. Through this tutorial, we’ll work with real-world data to uncover patterns and develop a deeper understanding of Melbourne’s property market. Let’s dive in!\n\n\nWhere we’re headed\nJust a few lines of R code transform numbers to data visualizations.\nFrom this:\n\n\n# A tibble: 10 × 6\n   type      address          postcode   price distance regionname    \n   &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;         \n 1 House     85 Turner St         3067 1480000      2.5 Northern Metro\n 2 House     25 Bloomburg St      3067 1035000      2.5 Northern Metro\n 3 House     5 Charles St         3067 1465000      2.5 Northern Metro\n 4 House     40 Federation La     3067  850000      2.5 Northern Metro\n 5 House     55a Park St          3067 1600000      2.5 Northern Metro\n 6 House     129 Charles St       3067  941000      2.5 Northern Metro\n 7 House     124 Yarra St         3067 1876000      2.5 Northern Metro\n 8 House     98 Charles St        3067 1636000      2.5 Northern Metro\n 9 House     217 Langridge St     3067 1000000      2.5 Northern Metro\n10 Townhouse 18a Mollison St      3067  745000      2.5 Northern Metro\n\n\nto this (REMARK Still need to complete the pretty-ing of plots)",
    "crumbs": [
      "Tutorials",
      "Tutorial 3: Data Visualisation for Business Intelligence"
    ]
  },
  {
    "objectID": "tutorials/data_visualisation.html#loading-and-understanding-the-data",
    "href": "tutorials/data_visualisation.html#loading-and-understanding-the-data",
    "title": "Tutorial 3: Data Visualisation for Business Intelligence",
    "section": "Loading and Understanding the Data",
    "text": "Loading and Understanding the Data\n\nR packages for today\n\nlibrary(tidyverse)  # for plotting, includes ggplot\nlibrary(patchwork)  # for combining multiple plots into subfigures\nlibrary(scales)     # for formatting axis scales\nlibrary(ggokabeito) # color blind friendly color palette -- this course's default\nlibrary(ggthemes)   # some extra styling & themes to explore\n\n\n\nLoading the Data in R\n\nhousing &lt;- read_csv(\"https://github.com/unimelb-cmce-10002/fba-book/raw/refs/heads/main/data/melbourne_housing.csv\")",
    "crumbs": [
      "Tutorials",
      "Tutorial 3: Data Visualisation for Business Intelligence"
    ]
  },
  {
    "objectID": "tutorials/data_visualisation.html#prepare-these-exercises-before-class",
    "href": "tutorials/data_visualisation.html#prepare-these-exercises-before-class",
    "title": "Tutorial 3: Data Visualisation for Business Intelligence",
    "section": "Prepare these Exercises before Class",
    "text": "Prepare these Exercises before Class\nPrepare these exercises before coming to class. Plan to spend 90 minutes on these exercises.\n\nExercise 1: Plotting Number of Listings by Region\nBy the end of this exercise, your plot should look similar to this one:\n\n\n\n\n\n\n\n\n\n(a). If you were a real estate investor or city planner, why would knowing the number of listings by region be valuable? What decisions could be influenced by this visualization?\n(b). Use the starter code below to create a first version of the bar plot. Replace YOUR_VARIABLE_NAME with the appropriate variable name from the dataset.\n\n\n\n\n\n\nWhat is a Bar Plot?\n\n\n\n\n\nA bar plot is a graphical representation of categorical data, where each category is represented by a bar whose height reflects its frequency or proportion. It is commonly used to compare counts across different groups, making it easy to identify the most and least common categories in a dataset. In business and research, bar plots help visualize trends, distributions, and key differences in data at a glance.\n\n\n\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME)) +\n    geom_bar()\n\n(c). Extend the plot above by adding labels to the x-axis, y-axis, and title. Use the labs() function to add these labels. The code below also rotates the axis labels by 25 degrees to improve readability.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME)) +\n    geom_bar() +\n    labs(x = \"YOUR_X_AXIS_LABEL\", y = \"YOUR_Y_AXIS_LABEL\", title = \"YOUR_TITLE\") +\n    theme(\n        axis.text.x = element_text(angle = 25, hjust = 1),\n    )\n\n(d). Change the color of the bars using the fill argument in geom_bar(). You can use any color you like, see (here)[https://r-graph-gallery.com/ggplot2-color.html] for a list of colors you can choose from.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME)) +\n    geom_bar(fill = \"YOUR_COLOR\") +\n    labs(x = \"YOUR_X_AXIS_LABEL\", y = \"YOUR_Y_AXIS_LABEL\", title = \"YOUR_TITLE\") +\n    theme(\n        axis.text.x = element_text(angle = 25, hjust = 1),\n    )\n\n(e). What patterns do you notice in the number of listings? Are certain regions overrepresented or underrepresented? How might this affect housing supply and pricing?\n(f). What could be improved in the visualization? Consider aspects like color, ordering of bars, labels, or additional annotations.\n\n\nExercise 2: Visualizing the distribution of Prices by Dwelling Type\nBy the end of this exercise, your plot should look similar to this one:\n\n\n\n\n\n\n\n\n\n(a). Why is a histogram useful for understanding price distributions? What insights can we gain from plotting price distributions separately for each dwelling type?\n\n\n\n\n\n\nWhat is a Histogram?\n\n\n\n\n\nA histogram is a visualization that represents the distribution of numerical data by dividing values into bins and counting the number of observations in each bin. Unlike a bar plot, which displays categorical data, a histogram is used for continuous variables like price, age, or distance.\nHistograms help identify patterns in data, such as skewness, outliers, and central tendencies, making them a crucial tool for understanding how values are distributed in a dataset.\n\n\n\n(b). Use the starter code below to create a basic histogram of house prices. Replace YOUR_VARIABLE_NAME with the correct variable.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME)) +\n    geom_histogram(bins = 50)\n\n(c). Extend the plot above by adding labels to the x-axis, y-axis, and title using the labs() function.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME)) +\n    geom_histogram(bins = 50) +\n    labs(x = \"YOUR_X_AXIS_LABEL\", y = \"YOUR_Y_AXIS_LABEL\", title = \"YOUR_TITLE\")\n\n(d). Modify the x-axis so that prices are displayed in dollar format by adding scale_x_continuous(labels = scales::dollar). We have rotated the axis labels to make the numbers easier to read.\n\nhousing %&gt;%\n    ggplot(aes(x = price)) +\n    geom_histogram(bins = 50) +\n    YOUR_CODE_HERE +\n    labs(x = \"YOUR_X_AXIS_LABEL\", y = \"YOUR_Y_AXIS_LABEL\", title = \"YOUR_TITLE\") +\n    theme(\n        axis.text.x = element_text(angle = 55, hjust = 1),\n    )\n\n(e). Add fill = type inside aes() to color the histogram by dwelling type and then create subplots by dwelling type.\n\nhousing %&gt;%\n    ggplot(aes(x = price, YOUR_CODE_HERE)) +\n    geom_histogram(bins = 50) +\n    YOUR_CODE_HERE +\n    labs(x = \"YOUR_X_AXIS_LABEL\", y = \"YOUR_Y_AXIS_LABEL\", title = \"YOUR_TITLE\") +\n    theme(\n        axis.text.x = element_text(angle = 55, hjust = 1),\n    ) +\n    YOUR_CODE_HERE\n\n(f). What does the histogram tell you about price differences between dwelling types?\n(g). What additional improvements or customizations could enhance this visualization? How might these changes improve clarity, interpretability, or storytelling in the data?\n\n\nExercise 3: The Price - Distance Relationship\nBy the end of this exercise, your plot should look similar to this one:\n\n\n\n\n\n\n\n\n\n(a). Why might we expect a relationship between price and distance to the CBD?\n(b). Use the starter code below to build a scatter plot of price vs. distance, replacing YOUR_VARIABLE_NAME with the correct column names.\n\n\n\n\n\n\nWhat is a Scatter Plot?\n\n\n\n\n\nA scatter plot is used to visualize the relationship between two continuous variables by plotting individual data points. Each dot represents one observation, helping identify patterns, clusters, and trends. In this case, it allows us to explore how house prices change with distance.\n\n\n\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME, y = YOUR_VARIABLE_NAME)) +\n    geom_point()\n\n(c). Since we have a large number of data points, many overlap, making it difficult to distinguish individual observations. Modify the geom_point() function to reduce over-plotting by adjusting the alpha value. Experiment with different values (e.g., 0.1, 0.05, 0.01) and describe how each affects the visualization.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME, y = YOUR_VARIABLE_NAME)) +\n    geom_point(alpha = YOUR_NUMBER)\n\n(d). We can better understand the relationship by adding a statistical transformation to the plot. Complete the geom_smooth() function call to overlay a straight line over the data. The se = FALSE argument removes the confidence interval around the line.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME, y = YOUR_VARIABLE_NAME)) +\n    geom_point(alpha = YOUR_NUMBER) +\n    geom_smooth(method = YOUR_METHOD, formula = YOUR_FORMULA, se = FALSE)\n\n(e). Finally, add labels to the x-axis, y-axis, and title using the labs() function. You can also customize the color of the points and the line using the color argument.\n\nggplot(housing, aes(x = YOUR_VARIABLE_NAME, y = YOUR_VARIABLE_NAME)) +\n    geom_point(alpha = YOUR_NUMBER, color = \"YOUR_COLOR\") +\n    geom_smooth(method = YOUR_METHOD, formula = YOUR_FORMULA, color = \"YOUR_COLOR\", se = FALSE)\n    scale_y_continuous(YOUR_CODE) +\n    labs(x = \"YOUR_LABEL\", y = \"YOUR_LABEL\", title = \"YOUR_TITLE\")\n\n(f). What does the scatter plot reveal about the relationship between house prices and distance to the CBD? How does the line help interpret this relationship?",
    "crumbs": [
      "Tutorials",
      "Tutorial 3: Data Visualisation for Business Intelligence"
    ]
  },
  {
    "objectID": "tutorials/data_visualisation.html#in-class-exercises",
    "href": "tutorials/data_visualisation.html#in-class-exercises",
    "title": "Tutorial 3: Data Visualisation for Business Intelligence",
    "section": "In-Class Exercises",
    "text": "In-Class Exercises\nYou will discuss these exercises in class with your tutor and peers. These exercises build from the exercises you have prepared above, you will get the most value from the class if you have completed those above before coming to class.\n\nExercise 4: Improving the Listings by Region Plot\n(a). Together with your peers, propose three changes you want to make to the plot in Exercise 1. Discuss the rationale behind each change and how it might improve the visualization.\n(b). Work with your tutor to create an agreed upon list of changes to make to the plot. What steps do you need to take to make these improvements?\n\n\n\n\n\n\nTeaching Note\n\n\n\nUse this exercise to guide students to the following changes:\n\nCentered title\nProportions on y-axes\nordered bars\nDecide to focus on one dwelling type\n\n\n\n(c). Implement the changes suggested in the R code below.\n\nggplot(housing, aes(x = YOUR_CODE)) +\n    geom_bar(aes(YOUR_CODE), fill = YOUR_CODE) +\n    labs(x = \"Region\", y = \"Frequency\", title = \"Number of Listings by Region\") +\n    theme(\n        axis.text.x = element_text(angle = 25, hjust = 1),\n        YOUR_CODE\n    ) \n\n\nSolution\n\n\n\nregion_bar &lt;- \n    housing %&gt;%\n    filter(type == \"House\") %&gt;%\n    ggplot(aes(x = fct_infreq(regionname))) +\n    geom_bar(aes(y = after_stat(count) / sum(after_stat(count))), fill = palette_okabe_ito()[2]) +\n    labs(x = \"Region\", y = \"Frequency\", title = \"Number of Listings by Region\") +\n    #theme_minimal() +\n    theme(\n        axis.text.x = element_text(angle = 25, hjust = 1),\n        plot.title = element_text(hjust = 0.5)  # Center title\n    ) \n\n\n \n(d). (Optional, if time). Change the theme of your plot to modify its visual appearance. You can experiment with different themes from the ggplot2 or ggthemes packages.\n\n\n\n\n\n\n📌 ggplot2 & ggthemes: Available Themes\n\n\n\n\n\n\n\n\n\n\n\n\n\nCategory\nTheme Name\nDescription\n\n\n\n\n🎨 Built-in Themes\ntheme_gray()\nDefault ggplot theme (light gray background)\n\n\n\ntheme_bw()\nBlack-and-white theme\n\n\n\ntheme_linedraw()\nMinimalist black-and-white theme with fine lines\n\n\n\ntheme_light()\nLight theme with subtle gridlines\n\n\n\ntheme_minimal()\nClean theme with no background color\n\n\n\ntheme_classic()\nVery minimalistic with axes but no grid\n\n\n\ntheme_void()\nCompletely empty background (great for maps)\n\n\n\ntheme_dark()\nDark background version of theme_light()\n\n\n📰 News & Presentation\ntheme_economist()\nThe Economist style\n\n\n\ntheme_fivethirtyeight()\nFiveThirtyEight style\n\n\n\ntheme_wsj()\nWall Street Journal style\n\n\n\ntheme_igray()\nInverse gray theme (darker)\n\n\n📊 Report & Journal Style\ntheme_tufte()\nEdward Tufte’s minimalistic approach\n\n\n\ntheme_foundation()\nFoundation report theme\n\n\n\ntheme_few()\nFew’s simplified visualization style\n\n\n\ntheme_pander()\nPander report theme\n\n\n\ntheme_hc()\nHighcharts-style theme\n\n\n\ntheme_solarized()\nSolarized color theme (light/dark)\n\n\n\ntheme_stata()\nStata-like style\n\n\n📖 Excel & Software Styles\ntheme_excel()\nExcel-like chart style\n\n\n\ntheme_solid()\nA solid background for presentations\n\n\n\n\n\n\n\n\nExercise 5: Improving the Price Distribution Plot\n(a). Together with your peers, propose three changes you want to make to the plot in Exercise 2. Discuss the rationale behind each change and how it might improve the visualization.\n(b). Work with your tutor to create an agreed upon list of changes to make to the plot. What steps do you need to take to make these improvements?\n\n\n\n\n\n\nTeaching Note\n\n\n\nUse this exercise to guide students to the following changes:\n\nCentered title\nProportions on y-axes\nLog x axes scale to handle skewness\nColor blind sensitive palette\n\n\n\n(c). Implement the changes suggested in the R code below.\n\nhousing %&gt;%\n    ggplot(aes(x = price, YOUR_CODE_HERE)) +\n    # This line adds proportions by facet -- explain intuitively, not technically\n    geom_histogram(aes(y = after_stat(count) / tapply(after_stat(count), after_stat(PANEL), sum)[after_stat(PANEL)]),\n                   bins = 50) +\n    scale_x_continuous(\n        YOUR_CODE_HERE\n    ) +\n    scale_y_continuous(YOUR_CODE_HERE) +\n    labs(x = \"Price\", y = \"YOUR_LABEL\", title = \"Prices by Dwelling Type\") + \n    facet_wrap(~type) +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_fill_okabe_ito() +\n    theme(\n        plot.title = element_text(hjust = 0.5)  # Center title\n    )\n\n\nSolution\n\n\n\nprice_hist &lt;-\n    housing %&gt;%\n    ggplot(aes(x = price, fill = type)) +\n    # ggplot(aes(x=price, group = type, fill = type)) +\n    geom_histogram(aes(y = after_stat(count) / tapply(after_stat(count), after_stat(PANEL), sum)[after_stat(PANEL)]),\n                   bins = 50) +\n    # Natural log scale for x-axis with meaningful breaks\n    scale_x_continuous(\n        trans = \"log\",\n        labels = scales::dollar,\n        breaks = c(150e3, 500e3, 1e6, 2.5e6, 6e6)#,\n        #labels = scales::comma\n    ) +\n    scale_y_continuous(labels = scales::percent) +\n    labs(x = \"Price\", y = \"Proportion within Type\", title = \"Prices by Dwelling Type\") + \n    facet_wrap(~type) +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_fill_okabe_ito() +\n    theme_classic() + \n    theme(\n        plot.title = element_text(hjust = 0.5)  # Center title\n    )\n\n\n \n\n\nExercise 6: Improving the Price-Distance Relationship Plot\n(a). Together with your peers, propose three changes you want to make to the plot in Exercise 3. Discuss the rationale behind each change and how it might improve the visualization.\n(b). Work with your tutor to create an agreed upon list of changes to make to the plot. What steps do you need to take to make these improvements?\n\n\n\n\n\n\nTeaching Note\n\n\n\nUse this exercise to guide students to the following changes:\n\nCentered title\nDecide to focus on one dwelling type\nColor points to match the House type chosen\nColor blind sensitive palette\nNon-linear model fit\n\n\n\n(c). Implement the changes suggested in the R code below.\n\nhousing %&gt;%\n    filter(type == \"House\") %&gt;%\n    ggplot(aes(x = distance, y = price)) +\n    geom_point(alpha = 0.05, , color = palette_okabe_ito()[2]) +\n    geom_smooth(method = \"lm\", formula = y ~ poly(x,2), se = FALSE, color = palette_okabe_ito()[6], linewidth = 1) +\n    scale_y_continuous(labels = scales::dollar) +\n    labs(x = \"Distance to CBD (km)\", y = \"Price\", title = \"House Price vs. Distance\") +\n    theme(\n        plot.title = element_text(hjust = 0.5)  # Center title\n    ) \n\n\nSolution\n\n\n\nprice_dist &lt;- \n    housing %&gt;%\n    filter(type == \"House\") %&gt;%\n    ggplot(aes(x = distance, y = price)) +\n    geom_point(alpha = 0.05, , color = palette_okabe_ito()[2]) +\n    geom_smooth(method = \"lm\", formula = y ~ poly(x,2), se = FALSE, color = palette_okabe_ito()[6], linewidth = 1) +\n    scale_y_continuous(labels = scales::dollar) +\n    labs(x = \"Distance to CBD\", y = \"Price\", title = \"House Price vs. Distance\") +\n    scale_color_okabe_ito() +\n    theme(\n        plot.title = element_text(hjust = 0.5)  # Center title\n    )  \n\n\n\n\nExercise 7: Putting the plots together\n(a). Use the code below to combine the plots for the three exercises above. Replace PLOT_ONE, PLOT_TWO, and PLOT_THREE with the plots you created in Exercises 5, 6, and 7.\n\nPLOT_ONE /    \n    (PLOT_TWO | PLOT_THREE) + \n    plot_layout(guides = \"collect\") & \n    theme(legend.position = \"bottom\")\n\n(b). Save this combined plot as a PDF file using the ggsave() function. You can specify the file name and dimensions using the filename and width and height arguments.\n\nggsave(\"YOUR_FILE_NAME\", width = 12, height = 8)\n\n\n\nExercise 8: Synthesizing the Findings\nIf you were presenting these results in a business meeting, how would you explain the key takeaways? Structure your summary to include:\n\nWhat you analyzed (data, variables)\nWhat you found (key insights from the visualizations)\nWhat decisions could be made based on this information?",
    "crumbs": [
      "Tutorials",
      "Tutorial 3: Data Visualisation for Business Intelligence"
    ]
  }
]